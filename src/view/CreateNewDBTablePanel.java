package view;/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

import domain.DirInfo;
import service.DBService;

import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 * @author Morgan
 */
public class CreateNewDBTablePanel extends javax.swing.JPanel {


    /**
     * Creates new form CreateNewDBTablePanel
     */
    public CreateNewDBTablePanel(DBService dbService) {
        initComponents();
        addTableNameTextFieldEvent();
        this.dbService = dbService;

        checkTableNameValidity();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tableNameNoticeLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        tableNameLabel = new javax.swing.JLabel();
        tableNameTextField = new javax.swing.JTextField();
        tableNameRuleLabel = new javax.swing.JLabel();
        noteLabel = new javax.swing.JLabel();
        noteScrollPane = new javax.swing.JScrollPane();
        noteTextArea = new javax.swing.JTextArea();
        finalNoticeLabel = new javax.swing.JLabel();
        finalResultLabel = new javax.swing.JLabel();
        finalDecisionButton = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tableNameNoticeLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        tableNameNoticeLabel.setText("表名非法");
        tableNameNoticeLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        titleLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 22)); // NOI18N
        titleLabel.setText("新建表");

        tableNameLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        tableNameLabel.setText("表名：");
        tableNameLabel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        tableNameTextField.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        tableNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tableNameTextFieldActionPerformed(evt);
            }
        });

        tableNameRuleLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        tableNameRuleLabel.setText("合法的表名：只包含小写英文字符、数字和下划线，且必须以英文字母开头");
        tableNameRuleLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        noteLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        noteLabel.setText("该表的说明：");
        noteLabel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        noteTextArea.setColumns(20);
        noteTextArea.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        noteTextArea.setLineWrap(true);
        noteTextArea.setRows(5);
        noteScrollPane.setViewportView(noteTextArea);

        finalNoticeLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        finalNoticeLabel.setText("提示：可以创建该表 / 不能创建该表");
        finalNoticeLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        finalResultLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        finalResultLabel.setText("结果：");
        finalResultLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        finalDecisionButton.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        finalDecisionButton.setText("新建表");
        finalDecisionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalDecisionButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(finalDecisionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(77, 77, 77)
                                .addComponent(finalResultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(312, 312, 312))
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(26, 26, 26)
                                                .addComponent(noteLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(noteScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 913, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(499, 499, 499)
                                                .addComponent(titleLabel))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(95, 95, 95)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(tableNameRuleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 731, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(tableNameLabel)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(tableNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(51, 51, 51)
                                                                .addComponent(tableNameNoticeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(319, 319, 319)
                                                .addComponent(finalNoticeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(122, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(titleLabel)
                                .addGap(13, 13, 13)
                                .addComponent(tableNameRuleLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(tableNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tableNameLabel)
                                        .addComponent(tableNameNoticeLabel))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(noteLabel)
                                        .addComponent(noteScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(finalNoticeLabel)
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(finalDecisionButton)
                                        .addComponent(finalResultLabel))
                                .addContainerGap(307, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tableNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tableNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tableNameTextFieldActionPerformed

    private void finalDecisionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalDecisionButtonActionPerformed
        // TODO add your handling code here:
        createNewDBTable();
    }//GEN-LAST:event_finalDecisionButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton finalDecisionButton;
    private javax.swing.JLabel finalNoticeLabel;
    private javax.swing.JLabel finalResultLabel;
    private javax.swing.JLabel noteLabel;
    private javax.swing.JScrollPane noteScrollPane;
    private javax.swing.JTextArea noteTextArea;
    private javax.swing.JLabel tableNameLabel;
    private javax.swing.JLabel tableNameNoticeLabel;
    private javax.swing.JLabel tableNameRuleLabel;
    private javax.swing.JTextField tableNameTextField;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables


    /////////////////////////////////////////////////////////////////////////////////////////////////////
    //my code starts here

    private DBService dbService;

    private boolean checkTableNameValidity(String name) {
        if (name == null) return false;
        int n = name.length();
        if (n == 0) return false;
        //JDBC好像不允许在表名中使用大写字母
        return name.matches("^[a-z][a-z0-9_]*$");
    }

    /**
     * 每当用户输入的表名发生变化，检查表名的合法性
     */
    private void addTableNameTextFieldEvent() {
        tableNameTextField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                checkTableNameValidity();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                checkTableNameValidity();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                checkTableNameValidity();
            }
        });
    }

    private MainMenu getMainMenu() {
        return (MainMenu) SwingUtilities.getRoot(this);
    }

    private void createNewDBTable() {
        String tableName = tableNameTextField.getText();
        if (dbService.directoryExists(tableName)) {
            JOptionPane.showMessageDialog(getMainMenu(),
                    "该表已存在", "失败", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!checkTableNameValidity(tableName)) {
            JOptionPane.showMessageDialog(getMainMenu(),
                    "表名不合法", "失败", JOptionPane.ERROR_MESSAGE);
            return;
        }

        System.out.print("请输入关于这张表的说明: ");
        String note = noteTextArea.getText();

        dbService.createNewDirectory(new DirInfo(tableName, note, null));
        getMainMenu().cacheDirectoryInfo();
    }


    private void checkTableNameValidity() {
        boolean result = checkTableNameValidity(tableNameTextField.getText());
        if (result) {
            tableNameNoticeLabel.setText("表名合法");
            finalDecisionButton.setEnabled(true);
        } else {
            tableNameNoticeLabel.setText("表名非法");
            finalDecisionButton.setEnabled(false);

        }
    }

}
