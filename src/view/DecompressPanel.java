package view;/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

import domain.FileInfo;
import service.ArchiveService;
import service.FileInfoService;
import utils.GUIUtils;
import utils.Utility;
import view.MainMenu;

import javax.swing.*;
import java.io.File;

/**
 * @author Morgan
 */
public class DecompressPanel extends javax.swing.JPanel {

    /**
     * Creates new form DecompressPanel
     */
    public DecompressPanel(FileInfoService fileInfoService) {
        initComponents();

        this.fileInfoService = fileInfoService;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        chooseFileButton = new javax.swing.JButton();
        chosedFileLabel = new javax.swing.JLabel();
        chosedFileTextField = new javax.swing.JTextField();
        noticeLabel = new javax.swing.JLabel();
        noteScrollPane = new javax.swing.JScrollPane();
        noteTextArea = new javax.swing.JTextArea();
        finalResultLabel = new javax.swing.JLabel();
        finalDecisionButton = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        titleLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 22)); // NOI18N
        titleLabel.setText("解压");

        chooseFileButton.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        chooseFileButton.setText("选择文件");
        chooseFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseFileButtonActionPerformed(evt);
            }
        });

        chosedFileLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        chosedFileLabel.setText("要解压的文件：");
        chosedFileLabel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        chosedFileTextField.setEditable(false);
        chosedFileTextField.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        chosedFileTextField.setText("请选择一个要解压的文件");
        chosedFileTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chosedFileTextFieldActionPerformed(evt);
            }
        });

        noticeLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        noticeLabel.setText("提示：数据库找到该文件记录，以下是摘要 / 数据库找不到该文件记录");
        noticeLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        noteTextArea.setEditable(false);
        noteTextArea.setColumns(20);
        noteTextArea.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        noteTextArea.setLineWrap(true);
        noteTextArea.setRows(5);
        noteTextArea.setText("文件摘要");
        noteScrollPane.setViewportView(noteTextArea);

        finalResultLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        finalResultLabel.setText("结果：");
        finalResultLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        finalDecisionButton.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        finalDecisionButton.setText("解压");
        finalDecisionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalDecisionButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(508, 508, 508)
                                                .addComponent(titleLabel))
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(chooseFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(chosedFileLabel)
                                                .addGap(18, 18, 18)
                                                .addComponent(chosedFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 841, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(55, 55, 55)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(noticeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                                        .addComponent(noteScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE))
                                                .addGap(26, 26, 26)
                                                .addComponent(finalDecisionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(52, 52, 52)
                                                .addComponent(finalResultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(titleLabel)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(chooseFileButton)
                                        .addComponent(chosedFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(chosedFileLabel))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(noticeLabel)
                                                .addGap(18, 18, 18)
                                                .addComponent(noteScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(92, 92, 92)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(finalDecisionButton)
                                                        .addComponent(finalResultLabel))))
                                .addContainerGap(35, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void chooseFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseFileButtonActionPerformed
        File selectedFile = GUIUtils.chooseFile(false);
        if (selectedFile == null) return;
        chosedFileTextField.setText(selectedFile.getAbsolutePath());
    }//GEN-LAST:event_chooseFileButtonActionPerformed

    private void chosedFileTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chosedFileTextFieldActionPerformed
    }//GEN-LAST:event_chosedFileTextFieldActionPerformed

    private void finalDecisionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalDecisionButtonActionPerformed
        decompressArchive();
    }//GEN-LAST:event_finalDecisionButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chooseFileButton;
    private javax.swing.JLabel chosedFileLabel;
    private javax.swing.JTextField chosedFileTextField;
    private javax.swing.JButton finalDecisionButton;
    private javax.swing.JLabel finalResultLabel;
    private javax.swing.JScrollPane noteScrollPane;
    private javax.swing.JTextArea noteTextArea;
    private javax.swing.JLabel noticeLabel;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables


    private FileInfoService fileInfoService;

    private MainMenu getMainMenu() {
        return (MainMenu) SwingUtilities.getRoot(this);
    }

    private void decompressArchive() {
        //选择要解压的压缩包
        File file = new File(chosedFileTextField.getText());

        if (!file.exists()) {
            JOptionPane.showMessageDialog(getMainMenu(),
                    "压缩文件不存在", "失败", JOptionPane.ERROR_MESSAGE);
            return;
        }

        //从数据库中读取对应的记录
        FileInfo fileInfo = fileInfoService.getFileInfo(file);
        Utility.ifNullThrow(fileInfo, "数据库不存在该文件的记录");

        //对比数据库中的记录与该文件的实际信息

        noteTextArea.append(fileInfo.getFileAbstract(file));

        //检验密码是否正确
        System.out.println("测试压缩包");
        ArchiveService.testRar(file, fileInfo.getPasswd());

        //压缩到同一目录下
        System.out.println("开始解压");
        ArchiveService.decompress(file, fileInfo.getPasswd());

        System.out.println("解压完成");
    }
}
