package view;/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

import domain.DirectoryInfo;
import domain.FileInfo;
import service.AccountService;
import service.ArchiveService;
import service.DBService;
import service.FileInfoService;
import utils.GUIUtils;
import utils.DirectoryListDialog;
import utils.Utility;


import javax.swing.*;
import java.io.File;
import java.sql.Connection;
import java.util.Arrays;
import java.util.Comparator;
import java.util.HashMap;

/**
 * @author Morgan
 */
public class CompressPanel extends javax.swing.JPanel {
    //这两个字段是对MainMenu中同名字段的引用
    private String[] directoryNames;
    private HashMap<String, DirectoryInfo> directoryInfoMap;
    private final DBService dbService;//这个字段是对MainMenu中的同名字段的引用
    private final FileInfoService fileInfoService;
    private final AccountService accountService;


    public void setDirectoryNames(String[] directoryNames) {
        this.directoryNames = directoryNames;
    }

    public void setDirectoryInfoMap(HashMap<String, DirectoryInfo> directoryInfoMap) {
        this.directoryInfoMap = directoryInfoMap;
    }

    private void makeArchiveAndRecord() {
        String tableName = chosedTableTextField.getText();
        if (tableName == null || (!directoryInfoMap.containsKey(tableName))) {
            GUIUtils.showErrorMessage(this, "请选择一张正确的表", "失败");
            return;
        }

        File file = new File(chosedFileTextField.getText());
        if (!file.exists()) {
            GUIUtils.showErrorMessage(this, "请选择一个存在的文件(夹)", "失败");
            return;
        }

        String note = noteTextArea.getText();

        String id = dbService.getFilesAutoIncrementValue();
        Utility.ifNullThrow(id,
                String.format("查找不到表%s的AUTO_INCREMENT值", tableName));//这个异常基本不可能发生


        String archiveName = "files_" + id + ".rar";
        File archiveFile = new File(file.getParent() + "\\" + archiveName);

        // 查询同目录下是否存在与压缩包相同的文件名，如果有，提示
        if (archiveFile.exists()) {
            GUIUtils.showErrorMessage(this, String.format("%s目录下存在名为%s的文件，与将要生成的压缩包同名，" +
                            "请移动该文件，或者将要压缩的文件移动到别的文件夹",
                    file.getParent(), archiveName), "失败");
            return;
        }

        //压缩是最消耗时间的一步
        String archivePassword = ArchiveService.compressWithRandomPassword(file, archiveName);
        Utility.ifNullThrow(archivePassword, "生成的密码有误");//这个异常基本不可能发生


        int dirID = directoryInfoMap.get(tableName).getId();


        //根据压缩文件的信息和保存的密码，生成FileInfo对象
        FileInfo fileInfo = fileInfoService.makeFileInfo(archiveFile,
                file.getName(),
                archivePassword,
                note, dirID);

        //将FileInfo对象写入数据库
        fileInfoService.insertFileInfo(fileInfo);

        GUIUtils.showInfoMessage(this, "最终测试：再次测试压缩包的密码", "FINAL TEST");
        ArchiveService.testRar(archiveFile, archivePassword);

        // 由用户手动确认测试压缩包的结果
        int confirmResult = GUIUtils.showConfirmDialog(this, "你确定要将文件信息存入数据库吗", "最终确认");

        if (confirmResult == JOptionPane.YES_OPTION) {
            dbService.commit();
            //数据库备份——没错，每次调用makeArchiveAndRecord，都要备份一次数据库
            dbService.databaseDump();
            GUIUtils.showInfoMessage(this, "数据库记录成功", "成功");
            System.out.println("生成的压缩包为" + archiveFile.getAbsolutePath());
            GUIUtils.showInfoMessage(this, "『压缩并记录』成功", "总结");
        } else {
            dbService.rollback();
            boolean deleteResult = archiveFile.delete();
            if (deleteResult) {
                GUIUtils.showInfoMessage(this, "生成的压缩包已被删除", "提示");
            }else {
                GUIUtils.showInfoMessage(this, "生成的压缩包删除失败，请手动删除", "提示");
            }
        }


    }


    /**
     * Creates new form CompressPanel
     */
    public CompressPanel(DBService dbService, FileInfoService fileInfoService, AccountService accountService) {
        this.fileInfoService = fileInfoService;
        this.dbService = dbService;
        this.accountService = accountService;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        chooseFileButton = new javax.swing.JButton();
        chosedFileTextField = new javax.swing.JTextField();
        chosedFileLabel = new javax.swing.JLabel();
        chooseTableButton = new javax.swing.JButton();
        chosedTableLabel = new javax.swing.JLabel();
        chosedTableTextField = new javax.swing.JTextField();
        noteLabel = new javax.swing.JLabel();
        noteScrollPane = new javax.swing.JScrollPane();
        noteTextArea = new javax.swing.JTextArea();
        archiveNameLabel = new javax.swing.JLabel();
        archiveDirectoryLabel = new javax.swing.JLabel();
        archiveNameTextField = new javax.swing.JTextField();
        archiveDirectoryTextField = new javax.swing.JTextField();
        noticeLabel = new javax.swing.JLabel();
        finalDecisionButton = new javax.swing.JButton();
        finalResultLabel = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setEnabled(false);

        titleLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 22)); // NOI18N
        titleLabel.setText("压缩并记录");

        chooseFileButton.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        chooseFileButton.setText("选择文件(夹)");
        chooseFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseFileButtonActionPerformed(evt);
            }
        });

        chosedFileTextField.setEditable(false);
        chosedFileTextField.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        chosedFileTextField.setText("请选择一个要压缩的文件(夹)");
        chosedFileTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chosedFileTextFieldActionPerformed(evt);
            }
        });

        chosedFileLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        chosedFileLabel.setText("要压缩的文件(夹)：");
        chosedFileLabel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        chooseTableButton.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        chooseTableButton.setText("选择表");
        chooseTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseTableButtonActionPerformed(evt);
            }
        });

        chosedTableLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        chosedTableLabel.setText("压缩包要存入的表：");
        chosedTableLabel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        chosedTableTextField.setEditable(false);
        chosedTableTextField.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        chosedTableTextField.setText("请选择压缩包要存入哪张表");
        chosedTableTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chosedTableTextFieldActionPerformed(evt);
            }
        });

        noteLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        noteLabel.setText("输入该文件的说明：");
        noteLabel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        noteTextArea.setColumns(20);
        noteTextArea.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        noteTextArea.setLineWrap(true);
        noteTextArea.setRows(5);
        noteScrollPane.setViewportView(noteTextArea);

        archiveNameLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        archiveNameLabel.setText("生成的压缩包名：");
        archiveNameLabel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        archiveDirectoryLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        archiveDirectoryLabel.setText("生成的压缩包的目录：");
        archiveDirectoryLabel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        archiveNameTextField.setEditable(false);
        archiveNameTextField.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        archiveNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                archiveNameTextFieldActionPerformed(evt);
            }
        });

        archiveDirectoryTextField.setEditable(false);
        archiveDirectoryTextField.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        archiveDirectoryTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                archiveDirectoryTextFieldActionPerformed(evt);
            }
        });

        noticeLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        noticeLabel.setText("提示：可以压缩 / 目录下存在名为%s的文件，与将要生成的压缩包同名");
        noticeLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        finalDecisionButton.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        finalDecisionButton.setText("压缩并记录");
        finalDecisionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalDecisionButtonActionPerformed(evt);
            }
        });

        finalResultLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 21)); // NOI18N
        finalResultLabel.setText("结果：");
        finalResultLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(433, 433, 433)
                                                .addComponent(titleLabel))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(16, 16, 16)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(chooseTableButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(chooseFileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                .addGap(29, 29, 29)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addComponent(chosedFileLabel)
                                                                        .addComponent(chosedTableLabel))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(chosedFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 756, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(chosedTableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 756, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(archiveDirectoryLabel)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(archiveDirectoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 756, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(noteLabel)
                                                                        .addComponent(archiveNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(27, 27, 27)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(archiveNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 756, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(noteScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 921, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(44, 44, 44)
                                                .addComponent(noticeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 1049, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(421, 421, 421)
                                                .addComponent(finalDecisionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(84, 84, 84)
                                                .addComponent(finalResultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(titleLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(chooseFileButton)
                                        .addComponent(chosedFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(chosedFileLabel))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(chooseTableButton)
                                        .addComponent(chosedTableLabel)
                                        .addComponent(chosedTableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(noteLabel)
                                        .addComponent(noteScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(17, 17, 17)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(archiveNameLabel)
                                        .addComponent(archiveNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(archiveDirectoryLabel)
                                        .addComponent(archiveDirectoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(noticeLabel)
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(finalDecisionButton)
                                        .addComponent(finalResultLabel))
                                .addContainerGap(208, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void chooseFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseFileButtonActionPerformed
        File selectedFile = GUIUtils.chooseFile(true);
        if (selectedFile == null) return;
        chosedFileTextField.setText(selectedFile.getAbsolutePath());
        archiveDirectoryTextField.setText(selectedFile.getParent());
    }//GEN-LAST:event_chooseFileButtonActionPerformed

    private void chosedFileTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chosedFileTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chosedFileTextFieldActionPerformed

    private void chooseTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseTableButtonActionPerformed
        String selectedTableName = DirectoryListDialog.showDialog(this,
                chooseTableButton,
                "所有的表名",
                "选择一张表",
                directoryNames,
                directoryNames[0],
                //按照最长的表名设置单元格宽度
                Arrays.stream(directoryNames).max(Comparator.comparingInt(String::length)).get(),
                directoryInfoMap);
        chosedTableTextField.setText(selectedTableName);

    }//GEN-LAST:event_chooseTableButtonActionPerformed

    private void chosedTableTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chosedTableTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chosedTableTextFieldActionPerformed

    private void archiveNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_archiveNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_archiveNameTextFieldActionPerformed

    private void archiveDirectoryTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_archiveDirectoryTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_archiveDirectoryTextFieldActionPerformed

    private void finalDecisionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalDecisionButtonActionPerformed
        makeArchiveAndRecord();
    }//GEN-LAST:event_finalDecisionButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel archiveDirectoryLabel;
    private javax.swing.JTextField archiveDirectoryTextField;
    private javax.swing.JLabel archiveNameLabel;
    private javax.swing.JTextField archiveNameTextField;
    private javax.swing.JButton chooseFileButton;
    private javax.swing.JButton chooseTableButton;
    private javax.swing.JLabel chosedFileLabel;
    private javax.swing.JTextField chosedFileTextField;
    private javax.swing.JLabel chosedTableLabel;
    private javax.swing.JTextField chosedTableTextField;
    private javax.swing.JButton finalDecisionButton;
    private javax.swing.JLabel finalResultLabel;
    private javax.swing.JLabel noteLabel;
    private javax.swing.JScrollPane noteScrollPane;
    private javax.swing.JTextArea noteTextArea;
    private javax.swing.JLabel noticeLabel;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables


    private static String[] tableNames = {"abc", "ade", "pdf", "game", "H"};
}
